# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# UI
GET      /                      controllers.MainController.index
GET      /data                  controllers.MainController.dataExplorer
GET      /cluster               controllers.MainController.clusterInfo
GET      /links                 controllers.MainController.findDslinks(regex ?= ".*", limit: Int ?= 100, offset: Int ?= 0)
GET      /upstream              controllers.MainController.uplinks
GET      /config                controllers.MainController.viewConfig

# DSLinks
POST     /conn                  facades.websocket.WebSocketController.dslinkHandshake
GET      /ws                    facades.websocket.WebSocketController.dslinkWSConnect
PUT      /dslinks/:name/stop    controllers.MainController.disconnectEndpoint(name)
DELETE   /dslinks/:name         controllers.MainController.removeLink(name)
DELETE   /dslinks               controllers.MainController.removeDisconnectedLinks               

# Uplinks
PUT      /uplinks               facades.websocket.WebSocketController.uplinkHandshake(url, name)
DELETE   /uplinks/:name         facades.websocket.WebSocketController.removeUplink(name)

# Metrics
GET      /metrics/cluster       controllers.MetricController.memberEvents(role: Option[String], address: Option[String], from: Option[Long], to: Option[Long])
GET      /metrics/connections   controllers.MetricController.connectionEvents(linkName: Option[String], from: Option[Long], to: Option[Long])
GET      /metrics/sessions      controllers.MetricController.sessionEvents(linkName: Option[String], from: Option[Long], to: Option[Long])
GET      /metrics/requests      controllers.MetricController.requestStatsByLink(from: Option[Long], to: Option[Long])
GET      /metrics/batches       controllers.MetricController.requestStatsByMethod(from: Option[Long], to: Option[Long])
GET      /metrics/responses     controllers.MetricController.responseStatsByLink(from: Option[Long], to: Option[Long])

# Benchmark
GET      /bench/stats           controllers.BenchmarkController.viewStats
PUT      /bench/start           controllers.BenchmarkController.start(subscribe: Boolean ?= false, reqCount: Int ?= 5, rspCount: Int ?= 2, rspNodeCount: Int ?= 10, batchSize: Int ?= 100, timeout: Long ?= 2000, parseJson: Boolean ?= false)
PUT      /bench/stop            controllers.BenchmarkController.stop
PUT      /bench/reset           controllers.BenchmarkController.reset

# Map static resources from the /public folder to the /assets URL path
GET      /assets/*file          controllers.Assets.versioned(path="/public", file: Asset)
